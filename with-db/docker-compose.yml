services:
  proxysql:
    image: proxysql/proxysql:2.5.5
    container_name: proxysql
    hostname: proxysql
    ports:
      - "6032:6032"
      - "6033:6033"
    volumes:
      - ../common/config/proxysql.cnf:/etc/proxysql.cnf:ro
    healthcheck:
      test: ["CMD", "mysql", "-h", "127.0.0.1", "-P", "6032", "-u", "admin", "-padmin", "-e", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      setup:
        condition: service_completed_successfully

  setup:
    image: mysql:5.7
    hostname: setup
    container_name: setup
    restart: "no"
    entrypoint: /run.sh
    volumes:
      - ./run.sh:/run.sh
      - ./redmine-dump.sql:/redmine-dump.sql:ro
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    depends_on:
      master:
        condition: service_healthy
      slave1:
        condition: service_healthy
      slave2:
        condition: service_healthy
      slave3:
        condition: service_healthy

  master:
    image: mysql:5.7
    hostname: master
    container_name: master
    restart: always
    command: >
      --defaults-file=/etc/mysql/my.cnf
      --server-id=1
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - master_data:/var/lib/mysql
      - ../common/config/my.cnf:/etc/mysql/my.cnf:ro
      - ../common/config/1_network.cnf:/etc/mysql/conf.d/1_network.cnf:ro
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: repl_user
      MYSQL_PASSWORD: repl_pass123
      MYSQL_ROOT_HOST: "%"
      TZ: Europe/Istanbul
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s

  slave1:
    image: mysql:5.7
    hostname: slave1
    container_name: slave1
    restart: always
    command: >
      --defaults-file=/etc/mysql/my.cnf
      --server-id=2
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ../common/config/my.cnf:/etc/mysql/my.cnf:ro
      - ../common/config/1_network.cnf:/etc/mysql/conf.d/1_network.cnf:ro
      - ../common/config/slave.cnf:/etc/mysql/conf.d/slave.cnf:ro
      - slave1_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: repl_user
      MYSQL_PASSWORD: repl_pass123
      TZ: Europe/Istanbul
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      master:
        condition: service_healthy

  slave2:
    image: mysql:5.7
    hostname: slave2
    container_name: slave2
    restart: always
    command: >
      --defaults-file=/etc/mysql/my.cnf
      --server-id=3
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ../common/config/my.cnf:/etc/mysql/my.cnf:ro
      - ../common/config/1_network.cnf:/etc/mysql/conf.d/1_network.cnf:ro
      - ../common/config/slave.cnf:/etc/mysql/conf.d/slave.cnf:ro
      - slave2_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: repl_user
      MYSQL_PASSWORD: repl_pass123
      TZ: Europe/Istanbul
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      master:
        condition: service_healthy

  slave3:
    image: mysql:5.7
    hostname: slave3
    container_name: slave3
    restart: always
    command: >
      --defaults-file=/etc/mysql/my.cnf
      --server-id=4
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ../common/config/my.cnf:/etc/mysql/my.cnf:ro
      - ../common/config/1_network.cnf:/etc/mysql/conf.d/1_network.cnf:ro
      - ../common/config/slave.cnf:/etc/mysql/conf.d/slave.cnf:ro
      - slave3_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: repl_user
      MYSQL_PASSWORD: repl_pass123
      TZ: Europe/Istanbul
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      master:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
    volumes:
      - ../common/config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - redmine1
      - redmine2
      - redmine3
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3

  redmine1:
    image: redmine:5.0.2
    container_name: redmine1
    hostname: redmine1
    restart: unless-stopped
    working_dir: /usr/src/redmine
    environment:
      REDMINE_DB_HOST: proxysql
      REDMINE_DB_PORT: 6033
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine_password
      REDMINE_DB_DATABASE: redmine
      REDMINE_DB_POOL: 25
      REDMINE_DB_ENCODING: utf8mb4
      TZ: Europe/Istanbul
      RAILS_ENV: production
      REDMINE_LANG: tr
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "1"
      SECRET_KEY_BASE: "some-really-really-long-secret-key-base-123456789"
    volumes:
      - ../volume/redmine-plugins:/usr/src/redmine/plugins
      - ../volume/repos:/home/redmine/repos
      - ../common/config/additional_environment.rb:/usr/src/redmine/config/additional_environment.rb:ro
      - ../volume/redmine-themes:/usr/src/redmine/public/themes
      - ../volume/redmine-data:/usr/src/redmine/files
      - ../volume/redmine-logs/redmine1:/var/log/redmine
      - type: bind
        source: ../common/config/database.yml
        target: /usr/src/redmine/config/database.yml
      - type: bind
        source: ../common/config/configuration.yml
        target: /usr/src/redmine/config/configuration.yml
      - ../common/config/initializers/redis_session_store.rb:/usr/src/redmine/config/initializers/redis_session_store.rb:ro
    depends_on:
      proxysql:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c", "
      bundle add redis-rails --version '~> 5.0' && \
      rm -f /usr/src/redmine/config/initializers/migrations.rb && \
      bundle exec rails server -u puma -b 0.0.0.0"]

  redmine2:
    image: redmine:5.0.2
    container_name: redmine2
    hostname: redmine2
    restart: unless-stopped
    working_dir: /usr/src/redmine
    environment:
      REDMINE_DB_HOST: proxysql
      REDMINE_DB_PORT: 6033
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine_password
      REDMINE_DB_DATABASE: redmine
      REDMINE_DB_POOL: 25
      REDMINE_DB_ENCODING: utf8mb4
      TZ: Europe/Istanbul
      RAILS_ENV: production
      REDMINE_LANG: tr
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "1"
      SECRET_KEY_BASE: "some-really-really-long-secret-key-base-123456789"
    volumes:
      - ../volume/redmine-plugins:/usr/src/redmine/plugins
      - ../volume/repos:/home/redmine/repos
      - ../common/config/additional_environment.rb:/usr/src/redmine/config/additional_environment.rb:ro
      - ../volume/redmine-themes:/usr/src/redmine/public/themes
      - ../volume/redmine-data:/usr/src/redmine/files
      - ../volume/redmine-logs/redmine2:/var/log/redmine
      - type: bind
        source: ../common/config/database.yml
        target: /usr/src/redmine/config/database.yml
      - type: bind
        source: ../common/config/configuration.yml
        target: /usr/src/redmine/config/configuration.yml
      - ../common/config/initializers/redis_session_store.rb:/usr/src/redmine/config/initializers/redis_session_store.rb:ro
    depends_on:
      proxysql:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c", "
      bundle add redis-rails --version '~> 5.0' && \
      rm -f /usr/src/redmine/config/initializers/migrations.rb && \
      bundle exec rails server -u puma -b 0.0.0.0"]

  redmine3:
    image: redmine:5.0.2
    container_name: redmine3
    hostname: redmine3
    restart: unless-stopped
    working_dir: /usr/src/redmine
    environment:
      REDMINE_DB_HOST: proxysql
      REDMINE_DB_PORT: 6033
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine_password
      REDMINE_DB_DATABASE: redmine
      REDMINE_DB_POOL: 25
      REDMINE_DB_ENCODING: utf8mb4
      TZ: Europe/Istanbul
      RAILS_ENV: production
      REDMINE_LANG: tr
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "1"
      SECRET_KEY_BASE: "some-really-really-long-secret-key-base-123456789"
    volumes:
      - ../volume/redmine-plugins:/usr/src/redmine/plugins
      - ../volume/repos:/home/redmine/repos
      - ../common/config/additional_environment.rb:/usr/src/redmine/config/additional_environment.rb:ro
      - ../volume/redmine-themes:/usr/src/redmine/public/themes
      - ../volume/redmine-data:/usr/src/redmine/files
      - ../volume/redmine-logs/redmine3:/var/log/redmine
      - type: bind
        source: ../common/config/database.yml
        target: /usr/src/redmine/config/database.yml
      - type: bind
        source: ../common/config/configuration.yml
        target: /usr/src/redmine/config/configuration.yml
      - ../common/config/initializers/redis_session_store.rb:/usr/src/redmine/config/initializers/redis_session_store.rb:ro
    depends_on:
      proxysql:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c", "
      bundle add redis-rails --version '~> 5.0' && \
      rm -f /usr/src/redmine/config/initializers/migrations.rb && \
      bundle exec rails server -u puma -b 0.0.0.0"]

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - TZ=Europe/Istanbul
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    user: "root"
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ../common/config/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
      - loki_wal:/wal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --try-connect-timeout=1 -O - http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      redmine1:
        condition: service_started
      redmine2:
        condition: service_started
      redmine3:
        condition: service_started
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.8.0
    container_name: promtail
    volumes:
      - ../volume/redmine-logs:/var/log/redmine:ro
      - ../common/config/promtail-config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      loki:
        condition: service_healthy
      redmine1:
        condition: service_started
      redmine2:
        condition: service_started
      redmine3:
        condition: service_started
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ../common/config/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
      - ../common/config/grafana-datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

volumes:
  master_data:
  slave1_data:
  slave2_data:
  slave3_data:
  redmine_files:
  redmine_db:
  redis_data:
  grafana_data:
  loki_data:
  loki_wal:

networks:
  default:
    name: mysql_network